<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>三遍读书法</title>
      <link href="/2018/05/27/%E4%B8%89%E9%81%8D%E8%AF%BB%E4%B9%A6%E6%B3%95/"/>
      <url>/2018/05/27/%E4%B8%89%E9%81%8D%E8%AF%BB%E4%B9%A6%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>矛盾曾说过，读名著要读三遍，第一遍很好的把他读完；第二遍要慢慢的读，细细咀嚼；第三遍就要一段段的读，领会运用。<br><a id="more"></a></p><p>第一遍：粗读</p><p>对于一本新书，先大略的读一遍，粗读，全读，快读是第一遍的特点。<br>对文中不认识不理解的内容不去推敲，也不研究，就做个标记，以后处理。但是要把整个文章读完，还要快速读完。</p><p>第二遍：精读</p><p>慢读、细读、深读是第二遍的特点。<br>要放慢读书速度，不认识不理解的内容要查阅资料或者询问别人把问题解决掉。理解作者是写什么，文章强调什么。</p><p>第三遍：消化</p><p>在此前两遍的基础上弄通整本书的意思，然后进行琢磨和思索，并能够学用结合，增强自己对问题的思考和判断解决问题能力。<br>三遍读书法，强调对各类文章和书籍的阅读都要理解和渗透，在此基础上形成记忆。不仅能掌握知识精髓还可以有创新，如果我们能运用这种学习方法，将会很有收获。</p>]]></content>
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>努力，才有更多选择</title>
      <link href="/2018/05/27/%E5%8A%AA%E5%8A%9B%EF%BC%8C%E6%89%8D%E6%9C%89%E6%9B%B4%E5%A4%9A%E9%80%89%E6%8B%A9/"/>
      <url>/2018/05/27/%E5%8A%AA%E5%8A%9B%EF%BC%8C%E6%89%8D%E6%9C%89%E6%9B%B4%E5%A4%9A%E9%80%89%E6%8B%A9/</url>
      <content type="html"><![CDATA[<h3 id="01-努力，我们才有更多选择"><a href="#01-努力，我们才有更多选择" class="headerlink" title="01 努力，我们才有更多选择"></a>01 努力，我们才有更多选择</h3><p>以前在网上，曾看到过这样一个笑话，令人印象深刻：<br>在国内某名校，老教授第一堂课并没讲什么深奥的哲理，而是说了几句看似戏谑又意味深长的话。他说：“女同学嘛，不需要努力的，你只需要嫁个好人家就行了。”<a id="more"></a>全场震惊的同时，他又留下了一句话：“当然了，如果不努力，你又怎能遇到更好的男人呢？能考进我们学校的同学应该都是非常努力的人。”</p><p>努力，不是为了给别人看，而是为了自己有更多的选择权。如何让我们有更多的选择呢？你得非常努力。对于大多数人来说，努力是我们创造选择的唯一途径。而那些不努力的人，只能被动的接收选择。蔡康永说过一段话：<br>【15岁觉得游泳难，放弃游泳，到18岁遇到一个喜欢的人约你去游泳，你只好说‘我不会耶’。18岁觉得英语难，放弃英文，28岁出现一个很棒的工作岗位要求会英语，你只好说‘我不会耶’。】</p><h3 id="02-真正努力的人，从来不焦虑"><a href="#02-真正努力的人，从来不焦虑" class="headerlink" title="02 真正努力的人，从来不焦虑"></a>02 真正努力的人，从来不焦虑</h3><p>努力没有上限，上进心并无尽头。你要求自己每时每刻都要做有意义的事情，看了会电影，刷了会综艺，就开始自责。为了成为“更好”的自己，哪怕一点放松，都是罪恶。所以你发现了吗？努力成为了目标本身。我们原本只是想顺利的通过考试啊，我们的目标，不是学习时间的长短，更不是努力程度的高低。没有上限的目标让我们焦虑不已，一旦停止努力，就会陷入焦虑之中。</p><p>如果把努力视为手段，而非目标，事情就清晰多了。我们需要的，是具体确切的短期目标。比如：今天8点~10点完成第一件事……晚上9点去操场跑五圈……尽量高效高质地完成短期目标，并且及时收到反馈，这才是努力的正确姿势。实现短期的具体目标，带来的完成感和成就感，将我们从焦虑中解救出来。努力本身不是目的，努力多长时间也不是目的，完成具体的任务，才是目标。</p><p>如果一个人对自己所做的事情完全有信心，他就不会焦躁狂热。凡是焦躁狂热的状态，通常都是深层的自卑心作祟。所以你看到的那些学霸，往往看不到他们很拼命读书的感觉，而且通常都是面无表情，非常淡定。而自修室那些头悬梁锥刺股的人，往往都是临时抱佛脚者。</p><p>我们焦虑的，不是我们不努力，而是比你优秀的人，比你还努力。你要做的就是清楚自己的方向在哪里，对准自己的目标，一步一步的走下去。不断的给自己信心，直到感动自己。<br>真正努力的人，从来不焦虑，因为他们没时间去焦虑。</p><h3 id="03-努力，成为更好的自己"><a href="#03-努力，成为更好的自己" class="headerlink" title="03 努力，成为更好的自己"></a>03 努力，成为更好的自己</h3><p>当我们在做一件事的时候，先不去想着成功与否会怎么样。</p><p>成功当然很爽，但如果不成功，我们是否还会享受当下做的事？</p><p>如果是，我认为那就是真正的成功。因为，你已经不需要依赖外界的承认，已经获得内心的满足。只要我自己认可自己，一切都是完满的。</p><p>我们的人生长跑中，应该坚持两个原则：一是自己永远不放弃自己，永远充满快乐去向前奔跑，只要向前，就会跑的比现在远；二是相信永远有人不会放弃你，他在远处等着你，只要你是你应该有的样子，他就一定会发现。而你现在的使命，就是慢慢变好。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>博客重新部署总结</title>
      <link href="/2018/04/09/%E5%8D%9A%E5%AE%A2%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2%E6%80%BB%E7%BB%93/"/>
      <url>/2018/04/09/%E5%8D%9A%E5%AE%A2%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<p>这是一篇2017.08.16开始的的文章~<br>那段时间我的博客上传出现问题了~<i class="fa fa-taxi"></i><br><a id="more"></a><br>断断续续的修改了几次，每次也没用心去做。后来换了Mac，又重新部署了一下，今天终于整理好了，心情十分的好～之前部署的时候没有太在意流程，重新部署下来还是花了不少时间，决定把这个部署流程重新记录一下。</p><p>剩下的时间总结一下近期的学习，会上传到博客上的。</p><h1 id="你好"><a href="#你好" class="headerlink" title="你好"></a>你好</h1><h2 id="你好-1"><a href="#你好-1" class="headerlink" title="你好"></a>你好</h2><h4 id="你好-2"><a href="#你好-2" class="headerlink" title="你好"></a>你好</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">哈哈哈</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Github部署</title>
      <link href="/2017/12/17/Github%E9%83%A8%E7%BD%B2/"/>
      <url>/2017/12/17/Github%E9%83%A8%E7%BD%B2/</url>
      <content type="html"><![CDATA[<h3 id="安装部署"><a href="#安装部署" class="headerlink" title="安装部署"></a>安装部署</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>1、初始化本地仓库：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></p><p>2、连接远程仓库：<br>如果是第一次使用git，在使用git的时候会提示输入用户名和密码，用户名是自己的注册邮箱。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/sweetheartly/sweetheartly.github.io.git</span><br></pre></td></tr></table></figure></p><p>3、发布hexo到github page。清空、刷新、部署三个命令，可以一起执行。如果部署时不clean，可能之前修改的文章还存在。包括一些配置等，有时候部署完成后并没有改变，其实是缓存未清除。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></p><p>4、添加文件到本地仓库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add</span><br></pre></td></tr></table></figure></p><p>5、提交声明<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &apos;内容&apos;</span><br></pre></td></tr></table></figure></p><p>6、推送到远程仓库（github）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></p><p>这里建议创建一个新的分支hexo，用于管理hexo文件。提交的的时候只提交hexo网站html、css、等源文件。而默认的master用来部署更新项目,具体可以看我的github地址分支情况 <a href="https://github.com/sweetheartly/sweetheartly.github.io" target="_blank" rel="noopener">https://github.com/sweetheartly/sweetheartly.github.io</a><br>创建并切换到新建分支：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b hexo</span><br></pre></td></tr></table></figure></p><p>将分支推送到远程仓库：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure></p><p>这时打开网站 <a href="https://sweetheartly.github.io">https://sweetheartly.github.io</a> 就能看到效果了。</p><p>记得提交以后去github上把hexo分支设置默认，以后写文章等都要部署。<br>文章在hexo目录下的\source_posts文件夹中，是Markdown格式。</p><h3 id="进阶-绑定域名"><a href="#进阶-绑定域名" class="headerlink" title="进阶-绑定域名"></a>进阶-绑定域名</h3><p>域名可以自行去阿里云，景安等网站购买。一般都有系统提示步骤。<br>拿到域名之后，进行解析，推荐使用dnspod免费解析。<br>具体使用方法：<br>1、注册登录dnspod之后，添加域名，然后解析，添加两条记录<br>2、登录你注册域名网站的管理后台，修改DNS解析地址为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f1g1ns1.dnspod.net</span><br><span class="line">f1g1ns2.dnspod.net</span><br></pre></td></tr></table></figure></p><p>3、登录github，找到项目，设置setting，找到GitHub Pages<br>4、在master分支下的CNAME.MD文件写入注册的域名<br>再次访问差不多就好了，如果延迟的话，可能解析立马不会生效。需要等会儿才能看到。</p>]]></content>
      
      
        <tags>
            
            <tag> Github部署 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mac解决Apache2目录权限问题</title>
      <link href="/2017/11/29/%E8%A7%A3%E5%86%B3Apache2%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98/"/>
      <url>/2017/11/29/%E8%A7%A3%E5%86%B3Apache2%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>为apache配置虚拟主机，在httpd-vhosts.conf文件中进行简单设置，启动apache进行访问，却出现了You don’t have permission to access / on this server的提示，原因是我的虚拟主机目录为非apache安装目录下的 .htaccess，所以违反了apache对默认对网站根访问权限。如下所示：<br><a id="more"></a><br><img src="/ArticleImg/11-29mac权限/localhost权限.png" alt="image"></p><p>apache的默认虚拟主机根目录地址为/Library/WebServer/Documents/ , 方法如下：</p><ol><li>更改 Apache 默认网站根目录需更改 DocumentRoot、Directory .</li><li>还要记得改一下权限，将 httpd.conf 中的 AllowOverride none，Require all granted ，全部都改成 AllowOverride All，Require all granted ..</li><li>Options指令可以在Apache服务器核心配置(server config)、虚拟主机配置(virtual host)、特定目录配置(directory)以及.htaccess文件中使用。Options指令的主要作用是控制特定目录将启用哪些服务器特性。<br>Options FollowSymLinks为禁止Apache显示该目录结构，以上问题可以通过下边两种方式来解决：<br> 第一，添加Indexes： Options Indexes FollowSymLinks<br> 第二，将其注释，改为： Options All<br> 注意：在Indexes前，加 + 代表允许目录浏览；加 – 代表禁止目录浏览</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory /&gt;</span><br><span class="line">    AllowOverride All</span><br><span class="line">    <span class="keyword">Require</span> all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">DocumentRoot <span class="string">"/Users/UserName/Documents/object"</span></span><br><span class="line">&lt;Directory <span class="string">"/Users/UserName/Documents/object"</span>&gt;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Options FollowSymLinks Multiviews</span></span><br><span class="line">    <span class="comment"># MultiviewsMatch Any</span></span><br><span class="line">    Options All</span><br><span class="line">    </span><br><span class="line">    AllowOverride All</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Controls who can get stuff from this server.</span></span><br><span class="line">    <span class="keyword">Require</span> all granted</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><p>重启Apache： sudo apachectl restart , 在浏览器输入对应地址即可 <i class="fa fa-yelp"></i></p>]]></content>
      
      <categories>
          
          <category> configuration </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Mac为Apache2配置虚拟主机</title>
      <link href="/2017/11/29/Mac%E4%B8%BAApache2%E9%85%8D%E7%BD%AE%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA/"/>
      <url>/2017/11/29/Mac%E4%B8%BAApache2%E9%85%8D%E7%BD%AE%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA/</url>
      <content type="html"><![CDATA[<p>Mac为Apache2配置虚拟主机</p>]]></content>
      
      <categories>
          
          <category> configuration </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>小猪佩奇</title>
      <link href="/2017/11/23/%E5%B0%8F%E7%8C%AA%E4%BD%A9%E5%A5%87/"/>
      <url>/2017/11/23/%E5%B0%8F%E7%8C%AA%E4%BD%A9%E5%A5%87/</url>
      <content type="html"><![CDATA[<p>Hey!<br>今天心情不错，给大家介绍一下，这是我的小佩奇～</p><a id="more"></a><p><img src="/img/佩奇1.0.jpeg" alt="image"></p><p>第一次画，把我的小佩奇都画丑了～这是个很好的放松的方式呢，以后休息的时候，可以慢慢在画几幅～</p>]]></content>
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手描画-小猪佩奇 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo+Github搭建个人博客手记</title>
      <link href="/2017/11/17/Hexo+Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%89%8B%E8%AE%B0/"/>
      <url>/2017/11/17/Hexo+Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%89%8B%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>Hexo是一个快速、简介、高效的静态博客框架，让多个页面在几秒内瞬间完成渲染。Hexo基于Node.js，支持Giithub，可以整合Octopress等大多数插件，并自己也拥有强大的插件系统.<br><a id="more"></a></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p>Hexo是基于Node.js的，需要首先安装npm工具，这个工具是Node.js安装包的工具，所以我们要首先安装Node.js.<br>使用apt-get安装Node.js：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install -y nodejs</span><br></pre></td></tr></table></figure></p><h4 id="安装npm"><a href="#安装npm" class="headerlink" title="安装npm"></a>安装npm</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install npm</span><br></pre></td></tr></table></figure><h4 id="使用npm安装Hexo"><a href="#使用npm安装Hexo" class="headerlink" title="使用npm安装Hexo"></a>使用npm安装Hexo</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h2 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h2><ol><li><p>Node和Git都安装好以后，在本地目录下建一个文件夹，如：MyBlog，进入该目录并安装Hexo.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install -g hexo</span><br></pre></td></tr></table></figure></li><li><p>初始化以后，执行init初始化命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></li><li><p>生成静态页面命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate（hexo g也可以）</span><br></pre></td></tr></table></figure></li><li><p>本地预览，进行文章预览调试，命令如下： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server（hexo s也可以）</span><br></pre></td></tr></table></figure><p>浏览器输入  <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>   即可。</p></li><li>一些常用命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</span><br><span class="line">hexo deploy #将.deploy目录部署到GitHub</span><br><span class="line">hexo help  #查看帮助</span><br><span class="line">hexo version  </span><br><span class="line">Hexo如何让文章想只显示一部分和一个&quot;阅读全文&quot;的按钮:在文章中加 &lt;!--more--&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="Github设置"><a href="#Github设置" class="headerlink" title="Github设置"></a>Github设置</h2><ol><li><p>github账号注册<br>Git是一种良好的、支持分支管理的代码管理方式，能很好地解决团队之间协作的问题。每个工程师在自己本地分支上开发，完成功能之后再将所有人的代码合并。<br>这个大家应该都有，没有的话就去注册一下吧！ Github地址：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a> </p></li><li><p>创建Name仓库<br>建立与你用户名对应的仓库，仓库名必须为[your_user_name.github.io]，如图所示：<br><img src="/img/GitNewRepo.png" alt="image"></p></li><li><p>配置和使用github<br>如果用过Git的话，这一步就可以忽略了。没有用过的，下边可要认真看了。</p><p>3.1 首先需要检查你电脑是否已经有SSH key，运行 git Bash 客户端，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/.ssh</span><br><span class="line">$ ls</span><br></pre></td></tr></table></figure><p>检查是否已经存在id_rsa.pub或id_dsa.pub文件，如果文件已存在，那么可以跳过步骤2，直接操作步骤3。</p><p>3.2 创建一个SSH key，这里请注意：你需要把邮件地址换成你自己的邮件地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure><p>代码参数含义：<br>-t 指定密钥类型，默认是 rsa ，可以省略。<br>-C 设置注释文字，比如邮箱。<br>-f 指定密钥文件存储文件名。</p><p>以上代码省略了 -f 参数，因此，运行上面那条命令后会让你输入一个文件名，用于保存刚才生成的SSH key代码，以下会出现三次提示：<br>第一次提示，生成两个密钥，直接回车选择默认文件名（ id_rsa 和 id_rsa.pub ）；<br>接下来两次提示，输入密码和确认密码，是push文件时候的密码，当然也可不输入密码，直接回车。代码如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line"># Enter file in which to save the key (~/.ssh/id_rsa): [Press enter]</span><br><span class="line"></span><br><span class="line">Enter passphrase (empty for no passphrase): </span><br><span class="line"># Enter same passphrase again:</span><br></pre></td></tr></table></figure><p>当你看到下面这段代码的时候，那就说明，你的SSH key已经创建成功，你只需要添加到github的SSH key上就可以了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved in ~/.ssh/id_rsa.</span><br><span class="line"># Your public key has been saved in ~/.ssh/id_rsa.pub.</span><br><span class="line"># The key fingerprint is:</span><br><span class="line"># 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com</span><br></pre></td></tr></table></figure><p>3.3 添加你的 SSH key 到 github上面去.首先你需要拷贝 id_rsa.pub 文件的内容.也可直接使用命令行来复制:<br>Mac下：pbcopy &lt; ~/.ssh/id_rsa.pub<br>Windows下：clip &lt; ~/.ssh/id_rsa.pub</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>登陆Github，<br>打开个人 Settings–&gt;SSH keys–&gt;Add SSH key，<br>Title 随便写，<br>Key 粘贴之前复制的内容，<br>这样 SSH key 就添加的 GitHub。</p><p>3.4 检测SSH key是否可以访问Github，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>当你输入以上代码时，会有一段警告代码，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host &apos;github.com (207.97.227.239)&apos; can&apos;t be established.</span><br><span class="line"># RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span><br><span class="line"># Are you sure you want to continue connecting (yes/no)?</span><br></pre></td></tr></table></figure><p>这是正常的，你输入 yes 回车既可。如果你创建 SSH key 的时候设置了密码，接下来就会提示你输入密码，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase for key &apos;~/.ssh/id_rsa&apos;:</span><br></pre></td></tr></table></figure><p>当然如果你密码输错了，会再要求你输入，直到对了为止。<br>注意：输入密码时如果输错一个字就会不正确，使用删除键是无法更正的。<br>密码正确后你会看到下面这段话，如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi sweetheartly! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>如果用户名是正确的,你已经成功设置SSH密钥。如果你看到 “access denied” ，者表示拒绝访问，那么你就需要使用 https 去访问，而不是 SSH 。</p><p>3.5 设置Git全局用户配置，这一步不是很重要，但是如果与之前所有的git账户不一致，Github会要求必须声明的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;xxx&quot;</span><br><span class="line">$ git config --global user.email xxx@gmail.com</span><br></pre></td></tr></table></figure></li></ol><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><ol><li><p>打开Hexo博客目录下的_config.yml，推荐使用VS code，尽量不要用记事本打开，可能会出现乱码（如果出现乱码，一定要用编辑器将文件编码格式改为：UTF-8）。repo: 找到自己对应的仓库，branch选择主分支.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:sweetheartly/sweetheartly.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li><p>通过shell命令找到Hexo所在的目录（这里我的是：MyBlog），安装hexo-deployer-git部署所需要的插件，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>清除public目录下的缓存文件，文件生成后立即部署网站,部署之前预先生成静态文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure></li><li><p>在浏览器输入<a href="https://sweetheartly.github.io/">https://sweetheartly.github.io/</a>, sweetheartly是个人github的名字，如图所示：<br><img src="/img/GitPreview.png" alt="image"></p></li></ol><p>好了，到这里就结束了。如果你有什么疑问或指正，请留言。</p><p>参考文档： <a href="https://www.liaoxuefeng.com" target="_blank" rel="noopener">https://www.liaoxuefeng.com</a>        =&gt; Git教程<br>参考文档： <a href="http://blog.csdn.net/binyao02123202/article/details/20130891" target="_blank" rel="noopener">http://blog.csdn.net/binyao02123202/article/details/20130891</a><br>参考文档：<a href="http://www.jianshu.com/p/21234432c94e" target="_blank" rel="noopener">http://www.jianshu.com/p/21234432c94e</a></p>]]></content>
      
      <categories>
          
          <category> Learning Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo个人博客 </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>博客重新部署总结</title>
      <link href="/2017/11/17/DeployCompleted/"/>
      <url>/2017/11/17/DeployCompleted/</url>
      <content type="html"><![CDATA[<p>这是一篇2017.08.16开始的的文章~ <i class="fa fa-yelp"></i><br>那段时间我的博客上传出现问题了~</p><p>断断续续的修改了几次，每次也没用心去做。<a id="more"></a>后来换了Mac，又重新部署了一下，今天终于整理好了，心情十分的好～之前部署的时候没有太在意流程，重新部署下来还是花了不少时间，决定把这个部署流程重新记录一下。</p><p>剩下的时间总结一下近期的学习，会上传到博客上的。</p>]]></content>
      
      
        <tags>
            
            <tag> 个人博客部署总结 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>happy</title>
      <link href="/2017/07/23/happy/"/>
      <url>/2017/07/23/happy/</url>
      <content type="html"><![CDATA[<p>我很随便的写了一篇文章。</p><p>真的，就是这么随便！</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>VS Code使用Emmet解决html代码自动补全</title>
      <link href="/2017/07/21/VS%20Code%E4%BD%BF%E7%94%A8Emmet%E8%A7%A3%E5%86%B3html%E4%BB%A3%E7%A0%81%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8/"/>
      <url>/2017/07/21/VS%20Code%E4%BD%BF%E7%94%A8Emmet%E8%A7%A3%E5%86%B3html%E4%BB%A3%E7%A0%81%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8/</url>
      <content type="html"><![CDATA[<h2 id="VS-Code在一般的-vue文件下，HTML代码是不能自动补全标签的，即便安装了-Vetur-也不行，要想解决这个问题，就用到了Emmet插件。"><a href="#VS-Code在一般的-vue文件下，HTML代码是不能自动补全标签的，即便安装了-Vetur-也不行，要想解决这个问题，就用到了Emmet插件。" class="headerlink" title="VS Code在一般的.vue文件下，HTML代码是不能自动补全标签的，即便安装了 Vetur 也不行，要想解决这个问题，就用到了Emmet插件。"></a>VS Code在一般的.vue文件下，HTML代码是不能自动补全标签的，即便安装了 Vetur 也不行，要想解决这个问题，就用到了Emmet插件。</h2><a id="more"></a><h2 id="Emmet"><a href="#Emmet" class="headerlink" title="Emmet"></a>Emmet</h2><p>Emmet(前身为 Zen Coding)，如果你从事Web前端开发的话，对该插件一定不会陌生。VsCode 内置了 Emmet 语法，使用仿 CSS 选择器的语法来生成代码，然后立刻生成对应的 HTML 结构或者 CSS 代码，同时还有多种实用的功能帮助进行前端开发，极大的提高代码编写的效率.</p><h3 id="Screenshot-文件后缀为-vue-："><a href="#Screenshot-文件后缀为-vue-：" class="headerlink" title="Screenshot ( 文件后缀为 .vue )："></a>Screenshot ( 文件后缀为 .vue )：</h3><p><img src="/img/vs_p.gif" alt="image"></p><h3 id="安装Emmet插件"><a href="#安装Emmet插件" class="headerlink" title="安装Emmet插件"></a>安装Emmet插件</h3><p><img src="/img/emmet.png" alt="image"></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>执行”文件 -&gt; 首选项 -&gt; 设置”,添加如下配置：<br><img src="/img/setting.png" alt="image"><br>代码如下:<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">"emmet.syntaxProfiles": &#123;</span><br><span class="line">    "vue-html": "html",</span><br><span class="line">    "vue": "html"</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><p>然后就ok了.  另外,推荐几个VS Code 常用插件&lt;快捷键：ctrl + shift + x &gt;：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Auto Close Tag    自动闭合HTML标签</span><br><span class="line">Auto Rename Tag   修改HTML标签时，自动修改匹配的标签</span><br><span class="line">HTML CSS Support  css提示（支持vue）</span><br></pre></td></tr></table></figure></p><h2 id="以下是一些常用的基本语法"><a href="#以下是一些常用的基本语法" class="headerlink" title="以下是一些常用的基本语法"></a>以下是一些常用的基本语法</h2><h3 id="嵌套操作符-Nesting-operators"><a href="#嵌套操作符-Nesting-operators" class="headerlink" title="嵌套操作符(Nesting operators)"></a>嵌套操作符(Nesting operators)</h3><p>嵌套操作符用于将缩写元素放置在生成的树中,是否应放置在上下文元素的内部或附近.</p><h4 id="子级-gt-通过-gt-标识元素可以生成嵌套子级元素-可以配合元素属性进行连写"><a href="#子级-gt-通过-gt-标识元素可以生成嵌套子级元素-可以配合元素属性进行连写" class="headerlink" title="子级:&gt;    通过&gt;标识元素可以生成嵌套子级元素,可以配合元素属性进行连写"></a>子级:&gt;    通过&gt;标识元素可以生成嵌套子级元素,可以配合元素属性进行连写</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">div#pageId&gt;ul&gt;li  =&gt; </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pageId"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="同级-字符表示生成兄弟级元素"><a href="#同级-字符表示生成兄弟级元素" class="headerlink" title="同级:+    +字符表示生成兄弟级元素."></a>同级:+    +字符表示生成兄弟级元素.</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">div#pageId+div.child  =&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pageId"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="父级-用于生成父级元素的同级元素-从这个-字符所在位置开始-查找左侧最近的元素的父级元素并生成其兄弟级元素"><a href="#父级-用于生成父级元素的同级元素-从这个-字符所在位置开始-查找左侧最近的元素的父级元素并生成其兄弟级元素" class="headerlink" title="父级:^    ^用于生成父级元素的同级元素,从这个^字符所在位置开始,查找左侧最近的元素的父级元素并生成其兄弟级元素."></a>父级:^    ^用于生成父级元素的同级元素,从这个^字符所在位置开始,查找左侧最近的元素的父级元素并生成其兄弟级元素.</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">div&gt;p.parent&gt;span.child^ul.brother&gt;li  =&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"brother"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="分组操作符-Grouping"><a href="#分组操作符-Grouping" class="headerlink" title="分组操作符(Grouping)"></a>分组操作符(Grouping)</h3><p>分组使用( )来实现缩写的分离.比如这个例子,如果不加括号那么 a 将作为 span 的子级元素生成.加上括号 a 将于( )内的元素同级.<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">div&gt;(ul&gt;li+span)&gt;a  =&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="乘法-Multiplication"><a href="#乘法-Multiplication" class="headerlink" title="乘法(Multiplication)"></a>乘法(Multiplication)</h3><p>使用N即可自动生成重复项.N是一个正整数.在使用时请注意N所在位置,位置不同生成的结果不同.<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ul&gt;li*3  =&gt;</span><br><span class="line">=&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="自动计数-numbering"><a href="#自动计数-numbering" class="headerlink" title="自动计数(numbering)"></a>自动计数(numbering)</h3><p>这个功能挺方便的对于生成重复项时增加一个序号,只需要加上$符号即可.<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ul&gt;li.item$&#123;item number:$&#125;*3  =&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item1"</span>&gt;</span>item number:1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item2"</span>&gt;</span>item number:2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item3"</span>&gt;</span>item number:3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="使用-修饰符，可以更改编号方向（升序或降序）和基数（例如起始值）-注意这个操作符在-之后添加"><a href="#使用-修饰符，可以更改编号方向（升序或降序）和基数（例如起始值）-注意这个操作符在-之后添加" class="headerlink" title="使用@修饰符，可以更改编号方向（升序或降序）和基数（例如起始值）.注意这个操作符在$之后添加"></a>使用@修饰符，可以更改编号方向（升序或降序）和基数（例如起始值）.注意这个操作符在$之后添加</h3><p>@-表示降序,@+表示升序,默认使用升序.<br>@N可以改变起始值.需要注意的是如果配合升降序使用的话N是放到+-符后.<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ul&gt;li.item$@-*3  =&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item3"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="再来个配合嵌套元素和计数的大栗子"><a href="#再来个配合嵌套元素和计数的大栗子" class="headerlink" title="再来个配合嵌套元素和计数的大栗子."></a>再来个配合嵌套元素和计数的大栗子.</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div.nav&gt;(nav#navbar&gt;(ul&gt;li&gt;(a[href="/xxx/product/$" data-index=$]&gt;lorem4)*5))+div.btn[type='button']&gt;span&#123;--&#125;^^div#main =&gt;</span><br></pre></td></tr></table></figure><p>这个有点复杂,看下效果:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">id</span>=<span class="string">"navbar"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/xxx/product/1"</span> <span class="attr">data-index</span>=<span class="string">"1"</span>&gt;</span>Lorem ipsum dolor sit.<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/xxx/product/2"</span> <span class="attr">data-index</span>=<span class="string">"2"</span>&gt;</span>Dolor vel, quia quas.<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/xxx/product/3"</span> <span class="attr">data-index</span>=<span class="string">"3"</span>&gt;</span>Qui hic, corrupti eum!<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/xxx/product/4"</span> <span class="attr">data-index</span>=<span class="string">"4"</span>&gt;</span>Necessitatibus perspiciatis, corrupti. Praesentium!<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/xxx/product/5"</span> <span class="attr">data-index</span>=<span class="string">"5"</span>&gt;</span>Nostrum quos, voluptate. Velit!<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">type</span>=<span class="string">"button"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>--<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="最后一个，包装文本："><a href="#最后一个，包装文本：" class="headerlink" title="最后一个，包装文本："></a>最后一个，包装文本：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">            首页</span><br><span class="line">            产品介绍</span><br><span class="line">            相关案例</span><br><span class="line">            关于我们</span><br><span class="line">            联系我们</span><br><span class="line"></span><br><span class="line">而我们预期的效果是这样:</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>产品介绍<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>相关案例<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>选中文本,按下 “ctrl+shift+p” 打开命令窗口输入”ewrap”</li><li>选择Emmet:使用缩写进行包装 (Wrap with Abbreviation) 选项</li><li>输入缩写字符 nav&gt;ul&gt;li* 按下回车键即可看到效果.</li></ol><h3 id="原文链接：http-www-cnblogs-com-summit7ca-p-6944215-html"><a href="#原文链接：http-www-cnblogs-com-summit7ca-p-6944215-html" class="headerlink" title="原文链接：http://www.cnblogs.com/summit7ca/p/6944215.html"></a>原文链接：<a href="http://www.cnblogs.com/summit7ca/p/6944215.html" target="_blank" rel="noopener">http://www.cnblogs.com/summit7ca/p/6944215.html</a></h3>]]></content>
      
      <categories>
          
          <category> Learning Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue文件中html代码自动补全 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo new article</title>
      <link href="/2017/07/19/hello-world/"/>
      <url>/2017/07/19/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      <categories>
          
          <category> Learning Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo new article </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>测试1</title>
      <link href="/2017/07/19/Test/"/>
      <url>/2017/07/19/Test/</url>
      <content type="html"><![CDATA[<p>这是我用来测试的一篇文章。</p><p>你看见了吗？</p><p><img src="/img/smiles.jpg" alt="image"></p>]]></content>
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试1 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>摔跤吧,爸爸</title>
      <link href="/2017/07/18/WrestlingSence/"/>
      <url>/2017/07/18/WrestlingSence/</url>
      <content type="html"><![CDATA[<p>时间：2017.07.18   PM 1:30<br>地点：科院 0#906<br>人员：三月小组在校生 </p><p>今天看了一部电影——“摔跤吧 爸爸”，听到这个名字，首先我觉得肯定是个男孩，因为只有男孩才会喜欢摔跤吧！女孩子一般不会这么粗鲁的。<br><a id="more"></a></p><p>故事就这么开始了。首先映入演练的是个拿过摔跤冠军的父亲，他有一个很远大的理想，代表印度拿下世界摔跤冠军。这个愿望一直没能实现，后来就寄希望于自己的孩子能够替他完成梦想。偶然发现了他的女儿有摔跤的潜质后，他就开始逼迫他的两个女儿进行训练。努力让他的女儿成为世界级冠军。在这个男权主导的社会环境下，吉他两姐妹练习摔跤成为了全村人的笑柄，受到了同学们的冷嘲热讽，最终突破自我拿下了世界冠军的故事。</p><p>奖牌不会长在树上。这部影片很励志，剧中每每透漏着坚持与不易。成功不是白白得来的，奖牌也不会长在树上，和天上不会掉馅饼一样，只有努力拼搏，拥有矢志不移的意志和顽强的意志力才有所成就。为了让他们变得更加强壮，父亲不顾母亲的反驳，坚持让她们吃鸡肉；长发干扰了训练，不顾吉塔的反驳，父亲毅然剪掉了她们的长发。吉塔的成功离不开训练和父亲的严格要求，我们想要成功亦是如此。当你羡慕别人站在舞台上光彩夺目的时候，你可曾想过，他每天早上5点就起床开始锻炼身体，当你在梦中的时候，别人就已经完成了今天的计划。每个人的成功，都与他付出的汗水成正比。</p><p>做事首先要客服心理障碍。当吉塔第一次参加摔跤比赛的时候，场上有几个不同类型的对手供他挑战，然而她选择了最强的一个。要想战胜别人，首先要战胜自己内心的恐惧。他选择了强者，证明她对自己也有信心，敢于去挑战强者，虽然比赛输了，也在比赛中找到了自己的不足。在比赛的关键时刻，吉塔回想小时候父亲强迫她们跳入冰冷的湖水中，父亲则在岸上说，记住，不是每一次我都能赶过来帮助你，要相信你自己。这一次的突破不仅仅是拿到了国家级金牌，更战胜了自我，突破了人生的额新征程。换做我们自己，做事的时候，总是想走捷径，尽快达到目的，因为未知的恐惧却忽略的这路途中锻炼，磕磕绊绊未免是不好的，些许在这途中就有意想不到的收获呢。</p><p>有个良师是非常重要的。吉塔的成功，一大部分是来自于这个冠军的父亲的正确指导。幼年的时候，吉塔的父亲就发现了吉塔具备很好的摔跤潜质，加之正确的指导，慢慢让吉塔也爱上了摔跤运动。国家比赛中，吉塔用教练的方法连连失败，因为教练没有从吉塔自身的优势去引导，而她的父亲更加了解吉塔，明白吉塔的优势是攻击，比赛时发挥她的优势，进入了决赛。决赛时，他又分析了对手的优势，交给吉塔正确的方法去应对。放在中国这个开放的社会中，父母总觉得孩子好好学习就对了，却忽略了孩子身上原有的潜能。</p><p>不忘初心，放得始终。获得第一枚国家金牌以后，吉塔进入了国家训练馆开始了新的训练。训练馆设备好，新事物多，很快吉塔就在这些花花世界迷失了自我。所幸她及时醒悟，恢复了过来。仔细分析了自己的错误与不足，迎来了最终的胜利。这让我们明白了胜利也不要骄傲，骄傲必定失败。</p><p>人生在于选择，逆境永远是相对存在的。选择怎样的人生，决定权永远在自己的手中，是不是拥有坚定不移的信念，朝着自己决定的方向一如既往的努力前行，这条道路势必不会都是坦途，历经风雨的洗礼，终有一天会在自己选择的道路终点实现自己的人生价值。</p><p><span style="float: right;">2017年7月18日</span></p>]]></content>
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摔跤吧,爸爸 观后感 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
